var o=Object.defineProperty;var a=(t,e,n)=>e in t?o(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var i=(t,e,n)=>(a(t,typeof e!="symbol"?e+"":e,n),n);class r{constructor(){i(this,"_webApp",Telegram.WebApp);i(this,"_backButton",Telegram.WebApp.BackButton);i(this,"_appData",Telegram.Utils.urlParseQueryString(this._webApp.initData));i(this,"webAppUser",JSON.parse(this._appData.user));i(this,"user",{id:this.webAppUser.id,username:this.webAppUser.username});this.applyColorScheme()}get userId(){if(this.user.id)return this.user.id;throw"No user id"}get platformName(){return this._appData.platform}get colorScheme(){return this._webApp.colorScheme}showBackButton(){this._backButton.show()}hideBackButton(){this._backButton.hide()}onBackButtonClick(e){this._backButton.onClick(e)}envokeHaptic(e){try{this._webApp.HapticFeedback.impactOccurred(e)}catch(n){console.error(n)}}close(){this._webApp.close()}showMainButton(e){this._webApp.MainButton.text=e,this._webApp.MainButton.show()}setMainButtonText(e){this._webApp.MainButton.setText(e)}onMainButtonClick(e){this._webApp.MainButton.onClick(e)}hideMainButton(){this._webApp.MainButton.hide()}applyColorScheme(){this._webApp.colorScheme==="dark"?document.documentElement.classList.add("dark"):document.documentElement.classList.remove("dark")}}class s{getEnvironment(){try{let e=Telegram.WebApp.initData;return new r}catch(e){return console.info(`You can use this website only with this telegram bot: ${{}.VITE_API_TG_URL}`),e}}}const c=new s;export{r as T,c as p};
